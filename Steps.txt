1. create app(languages), add that app and rest_framework to the  INSTALLED_APP
2. include languages' url in main url.py
3. create models inherit from  models.Model class Language(models.Model):
4. register models in admin
5. make serializer new file in languages.inherit from  serialzer.Modelsserializer\Hyperserializer
class LanguageSerializer(serializers.HyperlinkedModelSerializer)
6. specify fields in clas meta in serializer class
7. create views using viewsets fromm rest_framework
 View will have both models and serializers as import
 class  LanguageView inherits from viewsets.Modelviewset
8. specify queryset (to filter from from database table)  and serializer class  in the class
9. language.urls.py import  views and routers to generate all urls
10. register views in routers "router.register('languages',views.LanguageView)"
the default page is generated by the router itself
11. Make paradigm,programmer models
language has foreign key relationship with paradigm
language has manytomany relationship with programmer class
12. Make serializers for paradigm and programmer
13. make views for paradigm and progrmmer
14. register views
15.add login path('api/auth',include('rest_framework.urls')) in api.urls.py
16.add REST_FRAMEWORK ={
    'DEFAULT_PERMISSION_CLASSES':('rest_framework.permissions.IsAuthenticatedOrReadOnly',)   
} in settings.py 
17.add authentication:    'DEFAULT_AUTHENTICATION_CLASSES':('rest_framework_simplejwt.authentication.JWTAuthentication',)
18. import from rest_framework_simplejwt.views import TokenObtainPairView,TokenObtainSlidingView,TokenRefreshView
pair token=> acces token+refresh token whrn access token expires , we use refesh token to get new access token
19.create 2 new urls one to get token and one to refresh
20. Go to api/token endpoint in postman and  give username and pwd in "form-encoded" as key value pair
output will be axxess token and a refresh Token



